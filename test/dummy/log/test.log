  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (0.9ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.3ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (0.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.2ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.6ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.1ms)[0m  [1mCREATE VIEW messages AS -- Sample virtual model to test the gem.
(
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.from_id )
  INNER JOIN users u2 ON (u2.id = users_messages.to_id)
)
UNION
(
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = users_messages.from_id )
)
ORDER BY created_at ASC[0m
SQLite3::SQLException: near "(": syntax error: CREATE VIEW messages AS -- Sample virtual model to test the gem.
(
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.from_id )
  INNER JOIN users u2 ON (u2.id = users_messages.to_id)
)
UNION
(
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = users_messages.from_id )
)
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.8ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (0.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (2.1ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.1ms)[0m  [1mCREATE VIEW messages AS (
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.from_id )
  INNER JOIN users u2 ON (u2.id = users_messages.to_id)
)
UNION
(
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = users_messages.from_id )
)
ORDER BY created_at ASC[0m
SQLite3::SQLException: near "(": syntax error: CREATE VIEW messages AS (
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.from_id )
  INNER JOIN users u2 ON (u2.id = users_messages.to_id)
)
UNION
(
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = users_messages.from_id )
)
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.8ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (1.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.2ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (2.1ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.2ms)[0m  [1mCREATE VIEW messages AS 
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.from_id )
  INNER JOIN users u2 ON (u2.id = users_messages.to_id)

UNION

  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = users_messages.from_id )

ORDER BY created_at ASC[0m
SQLite3::SQLException: no such table: main.users_messages: CREATE VIEW messages AS 
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.from_id )
  INNER JOIN users u2 ON (u2.id = users_messages.to_id)

UNION

  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN users_messages um ON ( u.id = users_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = users_messages.from_id )

ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.6ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (1.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (1.0ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.1ms)[0m  [1mCREATE VIEW messages AS 
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)

UNION
(
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
)
ORDER BY created_at ASC[0m
SQLite3::SQLException: near "(": syntax error: CREATE VIEW messages AS 
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)

UNION
(
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
)
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.7ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (0.8ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.8ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.1ms)[0m  [1mCREATE VIEW messages AS 
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)

UNION (
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
)
ORDER BY created_at ASC[0m
SQLite3::SQLException: near "(": syntax error: CREATE VIEW messages AS 
  SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)

UNION (
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
)
ORDER BY created_at ASC
  [1m[36m (0.4ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (2.1ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.2ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime, "updated_at" datetime) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.8ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.3ms)[0m  [1mCREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)
UNION
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
ORDER BY created_at ASC[0m
SQLite3::SQLException: no such column: user_messages.to_id: CREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)
UNION
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.5ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.4ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.9ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.2ms)[0m  [1mCREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)
UNION
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
ORDER BY created_at ASC[0m
SQLite3::SQLException: no such column: user_messages.to_id: CREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.from_id )
  INNER JOIN users u2 ON (u2.id = user_messages.to_id)
UNION
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = user_messages.to_id )
  INNER JOIN users u2 ON ( u2.id = user_messages.from_id )
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.9ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.8ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.2ms)[0m  [1mCREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY created_at ASC[0m
SQLite3::SQLException: no such column: u1.name: CREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u.name as receiver_name, u.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u
  INNER JOIN user_messages um ON ( u.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.8ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  begin transaction
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.2ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.2ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.8ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.2ms)[0m  [1mCREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u1.name as receiver_name, u1.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY created_at ASC[0m
SQLite3::SQLException: no such column: u.id: CREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u1.name as receiver_name, u1.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (1.6ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (1.0ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.3ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.3ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.8ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.2ms)[0m  [1mCREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u1.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u1.name as receiver_name, u1.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u1.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY created_at ASC[0m
SQLite3::SQLException: 1st ORDER BY term does not match any column in the result set: CREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u1.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u1.name as receiver_name, u1.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u1.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY created_at ASC
  [1m[36m (0.3ms)[0m  [1mDROP VIEW messages[0m
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[35m (2.0ms)[0m  CREATE TABLE "schema_migrations" ("version" varchar NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mselect sqlite_version(*)[0m
  [1m[35m (1.2ms)[0m  CREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.0ms)[0m  begin transaction
  [1m[36m (0.4ms)[0m  [1mCREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_users_on_name" ON "users" ("name")
  [1m[36m (0.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) [0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m  CREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "schema_migrations" ("version") VALUES (?)[0m  [["version", "20160208084226"]]
  [1m[35m (0.7ms)[0m  commit transaction
  [1m[36mActiveRecord::SchemaMigration Load (0.1ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'

  [1m[36m (0.9ms)[0m  [1mCREATE VIEW messages AS 
SELECT u2.name as receiver_name, u2.id as receiver_id,
    u1.name as sender_name, u1.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u1.id = um.from_id )
  INNER JOIN users u2 ON (u2.id = um.to_id)
UNION
  SELECT u1.name as receiver_name, u1.id as receiver_id,
    u2.name as sender_name, u2.id as sender_id,
    um.content, um.updated_at, um.created_at
  FROM users u1
  INNER JOIN user_messages um ON ( u1.id = um.to_id )
  INNER JOIN users u2 ON ( u2.id = um.from_id )
ORDER BY um.created_at ASC[0m
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
SQLite3::SQLException: no such view: chats: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[36m (1.7ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (0.9ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateTestTables (20160208084226)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.2ms)[0m  CREATE EXTENSION intarray;
SQLite3::SQLException: near "EXTENSION": syntax error: CREATE EXTENSION intarray;
  [1m[36m (0.0ms)[0m  [1mrollback transaction[0m
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
SQLite3::SQLException: no such view: chats: DROP VIEW chats
  [1m[35m (0.1ms)[0m  DROP VIEW messages
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[36m (1.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (1.0ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateTestTables (20160208084226)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.3ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_users_on_name" ON "users" ("name")[0m
  [1m[35m (0.1ms)[0m  CREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20160208084226"]]
  [1m[36m (0.7ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'
[0m
  [1m[35m (1.4ms)[0m  CREATE VIEW messages AS SELECT DISTINCT receiver_name, receiver_id, sender_name, sender_id, content, updated_at, created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY um.created_at ASC
)
  [1m[36m (0.1ms)[0m  [1mCREATE VIEW chats AS SELECT SORT(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MAX(updated_at), COUNT(*) as number_of_messages
GROUP BY SORT(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages[0m
SQLite3::SQLException: near "[sender_id, receiver_id]": syntax error: CREATE VIEW chats AS SELECT SORT(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MAX(updated_at), COUNT(*) as number_of_messages
GROUP BY SORT(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
SQLite3::SQLException: no such view: chats: DROP VIEW chats
  [1m[35m (0.1ms)[0m  DROP VIEW messages
SQLite3::SQLException: no such view: messages: DROP VIEW messages
  [1m[36m (1.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" varchar NOT NULL) [0m
  [1m[35m (0.1ms)[0m  select sqlite_version(*)
  [1m[36m (1.0ms)[0m  [1mCREATE UNIQUE INDEX "unique_schema_migrations" ON "schema_migrations" ("version")[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
Migrating to CreateTestTables (20160208084226)
  [1m[36m (0.1ms)[0m  [1mbegin transaction[0m
  [1m[35m (0.3ms)[0m  CREATE TABLE "users" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "name" varchar, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_users_on_name" ON "users" ("name")[0m
  [1m[35m (0.1ms)[0m  CREATE TABLE "user_messages" ("id" INTEGER PRIMARY KEY AUTOINCREMENT NOT NULL, "from_id" integer, "to_id" integer, "content" text, "created_at" datetime NOT NULL, "updated_at" datetime NOT NULL) 
  [1m[36m (0.2ms)[0m  [1mCREATE  INDEX "index_user_messages_on_from_id" ON "user_messages" ("from_id")[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1mCREATE  INDEX "index_user_messages_on_to_id" ON "user_messages" ("to_id")[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES (?)  [["version", "20160208084226"]]
  [1m[36m (2.6ms)[0m  [1mcommit transaction[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_to_id' AND type='index'
[0m
  [1m[35m (0.1ms)[0m              SELECT sql
            FROM sqlite_master
            WHERE name='index_user_messages_on_from_id' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_user_messages_on_from_id' AND type='index'

  [1m[36m (0.1ms)[0m  [1m            SELECT sql
            FROM sqlite_master
            WHERE name='index_users_on_name' AND type='index'
            UNION ALL
            SELECT sql
            FROM sqlite_temp_master
            WHERE name='index_users_on_name' AND type='index'
[0m
  [1m[35m (0.9ms)[0m  CREATE VIEW messages AS SELECT DISTINCT receiver_name, receiver_id, sender_name, sender_id, content, updated_at, created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY um.created_at ASC
)
  [1m[36m (0.2ms)[0m  [1mCREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages[0m
SQLite3::SQLException: near "[sender_id, receiver_id]": syntax error: CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages
  [1m[36m (9.4ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (1.1ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1]
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x
    END
  END;
$$ LANGUAGE plpgsql;
PG::SyntaxError: ERROR:  missing "THEN" at end of SQL expression
LINE 4:       RETURN ARRAY[x[1], x[0]];
                                      ^
: CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1]
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x
    END
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (1.9ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.5ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x
    END
  END;
$$ LANGUAGE plpgsql;
PG::SyntaxError: ERROR:  syntax error at or near "END"
LINE 7:     END
            ^
: CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x
    END
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (1.8ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.5ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END;
  END;
$$ LANGUAGE plpgsql;
PG::SyntaxError: ERROR:  syntax error at or near ";"
LINE 7:     END;
               ^
: CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (2.1ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.7ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END
  END;
$$ LANGUAGE plpgsql;
PG::SyntaxError: ERROR:  syntax error at or near "END"
LINE 8:   END;
          ^
: CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (1.9ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.5ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (1.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (7.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (5.0ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.8ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.9ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (1.0ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.7ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (0.3ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT receiver_name, receiver_id, sender_name, sender_id, content, updated_at, created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY um.created_at ASC
)[0m
PG::SyntaxError: ERROR:  subquery in FROM must have an alias
LINE 3:   (SELECT u2.name as receiver_name, u2.id as receiver_id,
          ^
HINT:  For example, FROM (SELECT ...) [AS] foo.
: CREATE VIEW messages AS SELECT DISTINCT receiver_name, receiver_id, sender_name, sender_id, content, updated_at, created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY um.created_at ASC
)
  [1m[36m (2.1ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (0.6ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY um.created_at ASC
) AS _[0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "um"
LINE 16:   ORDER BY um.created_at ASC
                    ^
: CREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY um.created_at ASC
) AS _
  [1m[36m (1.9ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.4ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (6.4ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.5ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.6ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.5ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (0.3ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages
PG::SyntaxError: ERROR:  syntax error at or near "FROM"
LINE 5: FROM messages
        ^
: CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages
  [1m[36m (2.2ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.7ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.4ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (2.8ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.8ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.7ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.1ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.7ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (0.6ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY _.created_at ASC
) AS _[0m
PG::UndefinedTable: ERROR:  missing FROM-clause entry for table "_"
LINE 16:   ORDER BY _.created_at ASC
                    ^
: CREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY _.created_at ASC
) AS _
  [1m[36m (2.7ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.5ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.4ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (5.6ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.9ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.6ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (0.3ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages
PG::SyntaxError: ERROR:  syntax error at or near "FROM"
LINE 5: FROM messages
        ^
: CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
FROM messages
  [1m[36m (2.1ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.5ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (5.9ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.6ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.7ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.7ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.8ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (15.1ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
  [1m[36m (1.9ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.4ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (6.5ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.8ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (1.3ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.6ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (10.4ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (9.5ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS id,
  sender_name, receiver_name, MIN(created_at) as created_at,
  MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text, sender_name, receiver_name
  [1m[36m (29.6ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (8.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.5ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.3ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (13.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (7.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (17.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (5.9ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (5.4ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (2.1ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (5.3ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (13.6ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (7.1ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text
  [1m[36m (2.0ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.5ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (5.9ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.1ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.2ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (8.0ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (13.8ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text
  [1m[36m (2.1ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.5ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.3ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.3ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.7ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (13.6ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (7.0ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (6.1ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:15:47.858212"], ["updated_at", "2016-02-08 11:15:47.858212"]]
  [1m[35m (6.1ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:15:47.874899"], ["updated_at", "2016-02-08 11:15:47.874899"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:15:47.878467"], ["updated_at", "2016-02-08 11:15:47.878467"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:15:47.897453"], ["updated_at", "2016-02-08 11:15:47.897453"]]
  [1m[36m (6.2ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:15:47.906239"], ["updated_at", "2016-02-08 11:15:47.906239"]]
  [1m[35m (10.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:15:47.919381"], ["updated_at", "2016-02-08 11:15:47.919381"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (0.2ms)[0m  SELECT "chats".* FROM "chats" WHERE (ids && {3})
PG::SyntaxError: ERROR:  syntax error at or near "{"
LINE 1: SELECT "chats".* FROM "chats" WHERE (ids && {3})
                                                    ^
: SELECT "chats".* FROM "chats" WHERE (ids && {3})
  [1m[36m (1.9ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.3ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.8ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.0ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (5.9ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (1.3ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.1ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.4ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (12.2ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (7.1ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.8ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:15:59.897542"], ["updated_at", "2016-02-08 11:15:59.897542"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:15:59.900857"], ["updated_at", "2016-02-08 11:15:59.900857"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:15:59.903151"], ["updated_at", "2016-02-08 11:15:59.903151"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:15:59.921384"], ["updated_at", "2016-02-08 11:15:59.921384"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:15:59.924565"], ["updated_at", "2016-02-08 11:15:59.924565"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:15:59.926647"], ["updated_at", "2016-02-08 11:15:59.926647"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (0.3ms)[0m  SELECT "chats".* FROM "chats" WHERE (ids && '{3}')
PG::UndefinedFunction: ERROR:  operator does not exist: text && unknown
LINE 1: SELECT "chats".* FROM "chats" WHERE (ids && '{3}')
                                                 ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT "chats".* FROM "chats" WHERE (ids && '{3}')
  [1m[36m (2.6ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.7ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.2ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.5ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (5.2ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.3ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.0ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.5ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.7ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (9.5ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id])::text AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])::text
  [1m[36m (0.2ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:16:22.333360"], ["updated_at", "2016-02-08 11:16:22.333360"]]
  [1m[35m (0.7ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:16:22.337516"], ["updated_at", "2016-02-08 11:16:22.337516"]]
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36m (0.0ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:16:22.339590"], ["updated_at", "2016-02-08 11:16:22.339590"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:16:22.354237"], ["updated_at", "2016-02-08 11:16:22.354237"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:16:22.357293"], ["updated_at", "2016-02-08 11:16:22.357293"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:16:22.359512"], ["updated_at", "2016-02-08 11:16:22.359512"]]
  [1m[36m (0.4ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (0.5ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
PG::UndefinedFunction: ERROR:  operator does not exist: unknown && text
LINE 1: SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
                                                   ^
HINT:  No operator matches the given name and argument type(s). You might need to add explicit type casts.
: SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
  [1m[36m (1.9ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.6ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.3ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.1ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.9ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.0ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.7ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (14.5ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id]) AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:16:41.288012"], ["updated_at", "2016-02-08 11:16:41.288012"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (1.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:16:41.295126"], ["updated_at", "2016-02-08 11:16:41.295126"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:16:41.297826"], ["updated_at", "2016-02-08 11:16:41.297826"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:16:41.314137"], ["updated_at", "2016-02-08 11:16:41.314137"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:16:41.316341"], ["updated_at", "2016-02-08 11:16:41.316341"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:16:41.318849"], ["updated_at", "2016-02-08 11:16:41.318849"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (2.2ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
  [1m[36m (2.0ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.3ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.3ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (1.1ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (4.5ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.1ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.6ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.9ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.6ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (2.4ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (1.7ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (8.9ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (7.5ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id]) AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:17:00.677471"], ["updated_at", "2016-02-08 11:17:00.677471"]]
  [1m[35m (0.4ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:17:00.681035"], ["updated_at", "2016-02-08 11:17:00.681035"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:17:00.683817"], ["updated_at", "2016-02-08 11:17:00.683817"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.4ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:17:00.705119"], ["updated_at", "2016-02-08 11:17:00.705119"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:17:00.707797"], ["updated_at", "2016-02-08 11:17:00.707797"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:17:00.710075"], ["updated_at", "2016-02-08 11:17:00.710075"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (1.3ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
  [1m[36mChat Load (0.8ms)[0m  [1mSELECT "chats".* FROM "chats" WHERE ('{2}' && ids)[0m
  [1m[36m (2.1ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (0.6ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    IF x[0] > x[1] THEN
      RETURN ARRAY[x[1], x[0]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (0.4ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.2ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (2.4ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (0.9ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.2ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (3.0ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (6.4ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (13.5ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (5.0ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.8ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (0.7ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (1.8ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.1ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.2ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (6.9ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id]) AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.7ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:17:36.052301"], ["updated_at", "2016-02-08 11:17:36.052301"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:17:36.056048"], ["updated_at", "2016-02-08 11:17:36.056048"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.2ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.1ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:17:36.058062"], ["updated_at", "2016-02-08 11:17:36.058062"]]
  [1m[35m (0.2ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:17:36.074100"], ["updated_at", "2016-02-08 11:17:36.074100"]]
  [1m[36m (0.3ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:17:36.077311"], ["updated_at", "2016-02-08 11:17:36.077311"]]
  [1m[35m (0.3ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.1ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:17:36.079340"], ["updated_at", "2016-02-08 11:17:36.079340"]]
  [1m[36m (0.2ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (2.3ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
  [1m[36mChat Load (0.6ms)[0m  [1mSELECT "chats".* FROM "chats" WHERE ('{2}' && ids)[0m
  [1m[35mChat Load (0.6ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{1}' && ids)
  [1m[36m (24.5ms)[0m  [1mCREATE OR REPLACE FUNCTION add (x integer, y integer) RETURNS integer AS $$
  BEGIN
    RETURN x + y;
  END;
$$ LANGUAGE plpgsql;[0m
  [1m[35m (6.8ms)[0m  CREATE OR REPLACE FUNCTION tuple_sort (x int[]) RETURNS int[] AS $$
  BEGIN
    -- Note to myself: selection in array start at 1, not at zero !
    IF x[1]::int > x[2]::int THEN
      RETURN ARRAY[x[2], x[1]];
    ELSE
      RETURN x;
    END IF;
  END;
$$ LANGUAGE plpgsql;
  [1m[36m (1.8ms)[0m  [1mDROP VIEW chats[0m
PG::UndefinedTable: ERROR:  view "chats" does not exist
: DROP VIEW chats
  [1m[35m (0.6ms)[0m  DROP VIEW messages
PG::UndefinedTable: ERROR:  view "messages" does not exist
: DROP VIEW messages
  [1m[36m (13.9ms)[0m  [1mCREATE TABLE "schema_migrations" ("version" character varying NOT NULL) [0m
  [1m[35m (10.5ms)[0m  CREATE UNIQUE INDEX  "unique_schema_migrations" ON "schema_migrations"  ("version")
  [1m[36mActiveRecord::SchemaMigration Load (0.3ms)[0m  [1mSELECT "schema_migrations".* FROM "schema_migrations"[0m
Migrating to CreateTestTables (20160208084226)
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36m (14.7ms)[0m  [1mCREATE TABLE "users" ("id" serial primary key, "name" character varying, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (32.5ms)[0m  CREATE  INDEX  "index_users_on_name" ON "users"  ("name")
  [1m[36m (2.7ms)[0m  [1mCREATE TABLE "user_messages" ("id" serial primary key, "from_id" integer, "to_id" integer, "content" text, "created_at" timestamp NOT NULL, "updated_at" timestamp NOT NULL) [0m
  [1m[35m (0.7ms)[0m  CREATE  INDEX  "index_user_messages_on_from_id" ON "user_messages"  ("from_id")
  [1m[36m (0.7ms)[0m  [1mCREATE  INDEX  "index_user_messages_on_to_id" ON "user_messages"  ("to_id")[0m
  [1m[35mSQL (0.3ms)[0m  INSERT INTO "schema_migrations" ("version") VALUES ($1)  [["version", "20160208084226"]]
  [1m[36m (12.3ms)[0m  [1mCOMMIT[0m
  [1m[35mActiveRecord::SchemaMigration Load (0.2ms)[0m  SELECT "schema_migrations".* FROM "schema_migrations"
  [1m[36m (3.5ms)[0m  [1mSELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'user_messages'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname
[0m
  [1m[35m (2.3ms)[0m  SELECT t2.oid::regclass::text AS to_table, a1.attname AS column, a2.attname AS primary_key, c.conname AS name, c.confupdtype AS on_update, c.confdeltype AS on_delete
FROM pg_constraint c
JOIN pg_class t1 ON c.conrelid = t1.oid
JOIN pg_class t2 ON c.confrelid = t2.oid
JOIN pg_attribute a1 ON a1.attnum = c.conkey[1] AND a1.attrelid = t1.oid
JOIN pg_attribute a2 ON a2.attnum = c.confkey[1] AND a2.attrelid = t2.oid
JOIN pg_namespace t3 ON c.connamespace = t3.oid
WHERE c.contype = 'f'
  AND t1.relname = 'users'
  AND t3.nspname = ANY (current_schemas(false))
ORDER BY c.conname

  [1m[36m (7.5ms)[0m  [1mCREATE VIEW messages AS SELECT DISTINCT _.receiver_name, _.receiver_id, _.sender_name, _.sender_id, _.content, _.updated_at, _.created_at
FROM
  (SELECT u2.name as receiver_name, u2.id as receiver_id,
      u1.name as sender_name, u1.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.from_id )
    INNER JOIN users u2 ON (u2.id = um.to_id)
  UNION
    SELECT u1.name as receiver_name, u1.id as receiver_id,
      u2.name as sender_name, u2.id as sender_id,
      um.content as content, um.updated_at as updated_at, um.created_at as created_at
    FROM users u1
    INNER JOIN user_messages um ON ( u1.id = um.to_id )
    INNER JOIN users u2 ON ( u2.id = um.from_id )
  ORDER BY created_at ASC
) AS _[0m
  [1m[35m (8.2ms)[0m  CREATE VIEW chats AS SELECT tuple_sort(ARRAY[sender_id, receiver_id]) AS ids,
  MIN(created_at) as created_at, MAX(updated_at) as updated_at, COUNT(*) as number_of_messages
FROM messages
GROUP BY tuple_sort(ARRAY[sender_id, receiver_id])
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Jack' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Jack"], ["created_at", "2016-02-08 11:23:04.696172"], ["updated_at", "2016-02-08 11:23:04.696172"]]
  [1m[35m (6.1ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.4ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Cindy' LIMIT 1
  [1m[36mSQL (0.3ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Cindy"], ["created_at", "2016-02-08 11:23:04.705868"], ["updated_at", "2016-02-08 11:23:04.705868"]]
  [1m[35m (6.2ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mUser Exists (0.3ms)[0m  SELECT  1 AS one FROM "users" WHERE "users"."name" = 'Henry' LIMIT 1
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "users" ("name", "created_at", "updated_at") VALUES ($1, $2, $3) RETURNING "id"[0m  [["name", "Henry"], ["created_at", "2016-02-08 11:23:04.715957"], ["updated_at", "2016-02-08 11:23:04.715957"]]
  [1m[35m (4.9ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.5ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 1], ["to_id", 2], ["content", "Hey, how are you?"], ["created_at", "2016-02-08 11:23:04.740357"], ["updated_at", "2016-02-08 11:23:04.740357"]]
  [1m[36m (5.5ms)[0m  [1mCOMMIT[0m
  [1m[35m (0.1ms)[0m  BEGIN
  [1m[36mSQL (0.2ms)[0m  [1mINSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"[0m  [["from_id", 2], ["to_id", 1], ["content", "I'm fine, and you?"], ["created_at", "2016-02-08 11:23:04.748830"], ["updated_at", "2016-02-08 11:23:04.748830"]]
  [1m[35m (11.1ms)[0m  COMMIT
  [1m[36m (0.1ms)[0m  [1mBEGIN[0m
  [1m[35mSQL (0.2ms)[0m  INSERT INTO "user_messages" ("from_id", "to_id", "content", "created_at", "updated_at") VALUES ($1, $2, $3, $4, $5) RETURNING "id"  [["from_id", 3], ["to_id", 2], ["content", "Me too, I want to chat with you babe!"], ["created_at", "2016-02-08 11:23:04.762637"], ["updated_at", "2016-02-08 11:23:04.762637"]]
  [1m[36m (0.5ms)[0m  [1mCOMMIT[0m
  [1m[35mChat Load (1.7ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{3}' && ids)
  [1m[36mChat Load (0.7ms)[0m  [1mSELECT "chats".* FROM "chats" WHERE ('{2}' && ids)[0m
  [1m[35mChat Load (0.7ms)[0m  SELECT "chats".* FROM "chats" WHERE ('{1}' && ids)
